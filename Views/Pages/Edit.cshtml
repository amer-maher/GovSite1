@model GovSite.Models.Page
@{
  Layout = "~/Views/Shared/_AdminLayout.cshtml";
  var isEdit = Model.Id > 0;
}

<div class="card">
  <div class="card-body">
    @if (TempData["ok"] is string ok)
{
  <div class="alert alert-success">@ok</div>
}

   <form asp-action="@(isEdit ? "Edit" : "Create")"
      asp-route-id="@(isEdit ? Model.Id : null)"
      method="post"
      enctype="multipart/form-data"
      onsubmit="beforeSubmit()">

      @Html.AntiForgeryToken()

     @if (isEdit) { <input type="hidden" asp-for="Id" /> }
<input type="hidden" asp-for="AgencyId" />
<input type="hidden" asp-for="BlocksJson" id="BlocksJson" />


      <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>

      <div class="row g-3">
        <div class="col-md-6">
          <label class="form-label" asp-for="Title"></label>
          <input asp-for="Title" class="form-control" required />
          <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="col-md-3">
          <label class="form-label" asp-for="Slug"></label>
          <input asp-for="Slug" class="form-control" required />
          <span asp-validation-for="Slug" class="text-danger"></span>
        </div>
        <div class="col-md-3 d-flex align-items-end">
          <div class="form-check">
            <input asp-for="IsHome" class="form-check-input" id="isHome" />
            <label for="isHome" class="form-check-label">الصفحة الرئيسية</label>
          </div>
        </div>

        <div class="col-md-3">
          <label class="form-label" asp-for="ThemePrimary"></label>
          <input asp-for="ThemePrimary" class="form-control" type="color" />
        </div>
        <div class="col-md-3">
          <label class="form-label" asp-for="BackgroundColor"></label>
          <input asp-for="BackgroundColor" class="form-control" type="color" />
        </div>
      </div>

      <hr class="my-4" />

      <h5 class="mb-3">قسم الهيرو</h5>
      <div class="row g-3">
        <div class="col-md-6">
          <label class="form-label" asp-for="HeroTitle"></label>
          <input asp-for="HeroTitle" class="form-control" />
        </div>
        <div class="col-md-6">
          <label class="form-label" asp-for="HeroSubtitle"></label>
          <input asp-for="HeroSubtitle" class="form-control" />
        </div>
        <div class="col-md-3">
          <label class="form-label" asp-for="HeroBgColor"></label>
          <input asp-for="HeroBgColor" type="color" class="form-control" />
        </div>
        <div class="col-md-3">
          <label class="form-label" asp-for="HeroTextColor"></label>
          <input asp-for="HeroTextColor" type="color" class="form-control" />
        </div>
        <div class="col-md-6">
          <label class="form-label" asp-for="HeroImageUrl"></label>
          <div class="input-group">
            <input asp-for="HeroImageUrl" class="form-control" placeholder="/uploads/..." />
            <input type="file" id="heroUpload" class="form-control" />
          </div>
          <small class="text-muted">اختر ملف ثم ارفعه، سيتم تعبئة المسار تلقائيًا.</small>
          <span asp-validation-for="HeroImageUrl" class="text-danger"></span>
        </div>
      </div>

      <hr class="my-4" />

      <h5 class="mb-3">الأقسام/البلوكات</h5>
      <div id="blocks"></div>
      <div class="mt-3 d-flex gap-2">
        <button type="button" class="btn btn-outline-primary" onclick="addBlock('cards')">+ بطاقات</button>
        <button type="button" class="btn btn-outline-secondary" onclick="addBlock('text')">+ نص</button>
        <button type="button" class="btn btn-outline-success" onclick="addBlock('features')">+ ميزات</button>
        <button type="button" class="btn btn-outline-dark" onclick="addBlock('gallery')">+ معرض</button>
      </div>

      <div class="mt-4 d-flex gap-2">
        <button class="btn btn-primary">حفظ</button>
        <a asp-action="Index" class="btn btn-light">إلغاء</a>
        @if (isEdit)
        {
          <a class="btn btn-outline-secondary" asp-action="Preview" asp-route-id="@Model.Id" target="_blank">معاينة</a>
          <a class="btn btn-outline-info" asp-action="PublicLink" asp-route-id="@Model.Id" target="_blank">فتح كرابط عام</a>
        }
      </div>
    </form>
  </div>
</div>
@section Scripts {
<script>
// --- الحالة ---
let blocks = [];

// تحميل البيانات المخزنة (لو موجودة)
try {
  const raw = document.getElementById('BlocksJson').value || '[]';
  blocks = JSON.parse(raw);
  if (!Array.isArray(blocks)) blocks = [];
} catch { blocks = []; }

// تحديث الحقل المخفي + الديباغ
function updateHidden(){
  const json = JSON.stringify(blocks || []);
  document.getElementById('BlocksJson').value = json;
  const dbg = document.getElementById('debug');
  if (dbg) dbg.innerText = json;
}

// رسم البلوكات
function render(){
  const host = document.getElementById('blocks');
  host.innerHTML = '';
  blocks.forEach((b, i) => {
    const card = document.createElement('div');
    card.className = 'card my-3';
    card.innerHTML = `
      <div class="card-header d-flex justify-content-between align-items-center">
        <strong>بلوك: ${b.type}</strong>
        <div class="d-flex gap-2">
          <button type="button" class="btn btn-sm btn-outline-secondary" onclick="move(${i},-1)">▲</button>
          <button type="button" class="btn btn-sm btn-outline-secondary" onclick="move(${i},1)">▼</button>
          <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeBlock(${i})">حذف</button>
        </div>
      </div>
      <div class="card-body">
        <div class="row g-2">
          <div class="col-md-4"><label class="form-label">العنوان</label>
            <input class="form-control" value="${b.title||''}" oninput="setv(${i},'title',this.value)"/>
          </div>
          <div class="col-md-4"><label class="form-label">وصف</label>
            <input class="form-control" value="${b.subtitle||''}" oninput="setv(${i},'subtitle',this.value)"/>
          </div>
          <div class="col-md-2"><label class="form-label">خلفية</label>
            <input type="color" class="form-control form-control-color" value="${b.bgColor||'#ffffff'}" oninput="setv(${i},'bgColor',this.value)"/>
          </div>
          <div class="col-md-2"><label class="form-label">لون نص</label>
            <input type="color" class="form-control form-control-color" value="${b.textColor||'#000000'}" oninput="setv(${i},'textColor',this.value)"/>
          </div>
        </div>
        <div class="mt-3">
          <button type="button" class="btn btn-sm btn-outline-primary" onclick="addItem(${i})">+ عنصر</button>
        </div>
        <div class="row mt-2" id="items-${i}">
          ${(b.items||[]).map((it,j)=>`
            <div class="col-md-6">
              <div class="border rounded p-2 mb-2">
                <div class="mb-1"><input class="form-control" placeholder="عنوان" value="${it.title||''}" oninput="setItem(${i},${j},'title',this.value)"></div>
                <div class="mb-1"><input class="form-control" placeholder="نص" value="${it.text||''}" oninput="setItem(${i},${j},'text',this.value)"></div>
                <div class="mb-1 input-group">
                  <input class="form-control" placeholder="/uploads/..." value="${it.imageUrl||''}" oninput="setItem(${i},${j},'imageUrl',this.value)">
                  <input type="file" class="form-control" onchange="upload(this, url => setItem(${i},${j},'imageUrl',url))">
                </div>
                <div class="mb-1"><input class="form-control" placeholder="رابط" value="${it.linkUrl||''}" oninput="setItem(${i},${j},'linkUrl',this.value)"></div>
                <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeItem(${i},${j})">حذف العنصر</button>
              </div>
            </div>`).join('')}
        </div>
      </div>`;
    host.appendChild(card);
  });
  updateHidden();
}

// --- عمليات ---
function addBlock(type){ blocks.push({type, title:'', subtitle:'', bgColor:'#ffffff', textColor:'#000000', items:[]}); render(); }
function removeBlock(i){ blocks.splice(i,1); render(); }
function move(i,d){ const ni=i+d; if(ni<0||ni>=blocks.length) return; [blocks[i],blocks[ni]]=[blocks[ni],blocks[i]]; render(); }
function setv(i,k,v){ blocks[i][k]=v; updateHidden(); }
function addItem(i){ blocks[i].items = blocks[i].items||[]; blocks[i].items.push({}); render(); }
function removeItem(i,j){ blocks[i].items.splice(j,1); render(); }
function setItem(i,j,k,v){ blocks[i].items[j][k]=v; updateHidden(); }

// --- رفع الملفات ---
async function upload(input, cb){
  const f = input.files?.[0]; if(!f) return;
  const fd = new FormData(); fd.append('file', f);
  const res = await fetch('/upload', { method:'POST', body: fd });
  if (!res.ok) { alert('فشل الرفع'); return; }
  const data = await res.json();
  cb(data.url);
  updateHidden();
}

// --- رفع صورة الهيرو ---
document.getElementById('heroUpload')?.addEventListener('change', async (e)=>{
  const f = e.target.files?.[0]; if(!f) return;
  const fd = new FormData(); fd.append('file', f);
  const res = await fetch('/upload', { method:'POST', body: fd });
  if (!res.ok) { alert('فشل الرفع'); return; }
  const data = await res.json();
  document.querySelector('input[name="HeroImageUrl"]').value = data.url;
});

// --- قبل الإرسال ---
function beforeSubmit(){
  updateHidden();
  console.log("Blocks saved:", document.getElementById('BlocksJson').value);
}

// --- Debug: مكان لعرض JSON ---
const dbgPre = document.createElement("pre");
dbgPre.id = "debug";
dbgPre.style = "background:#f9f9f9; padding:10px; font-size:12px;";
document.querySelector("form").appendChild(dbgPre);

// أول رسم
render();
</script>
}
